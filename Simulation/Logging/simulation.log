NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: (<bound method SarahsSimulation.mode2_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x10b2f8820>>, 1)
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: (<bound method SarahsSimulation.mode2_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x10b2f8820>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode2_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x10b2f8820>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode2_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x10b2f8820>>
(SarahsSimulation.py, SarahsSimulation, mode2_timeout) Running the Mode 2 Simulation
(SarahsSimulation.py, SarahsSimulation, mode2_timeout) Running the Mode 2 Simulation
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 3 is paired with the simulation function: (<bound method SarahsSimulation.mode3_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x10b2f8820>>, 1)
(Simulation.py, run_sim) Mode 3 is paired with the simulation function: (<bound method SarahsSimulation.mode3_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x10b2f8820>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode3_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x10b2f8820>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode3_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x10b2f8820>>
(SarahsSimulation.py, SarahsSimulation, mode3_timeout) Running the Mode 3 Simulation
(SarahsSimulation.py, SarahsSimulation, mode3_timeout) Running the Mode 3 Simulation
(Vole.py, simulate_vole_interactable_interaction) simulating vole3 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole3 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts1.mode1'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts1.mode1'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts1.mode1'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts1.mode1'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts1.mode1'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts1.mode1'>.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts1.mode2'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts1.mode2'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102d73f70>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102d73f70>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102d73f70>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102d73f70>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10efde730>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10efde730>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10efde730>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10efde730>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f4b9730>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f4b9730>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f4b9730>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f4b9730>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1090089d0>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1090089d0>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1090089d0>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1090089d0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106883220>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106883220>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106883220>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106883220>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107bfa9d0>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107bfa9d0>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107bfa9d0>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107bfa9d0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1062a0730>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1062a0730>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1062a0730>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1062a0730>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107e35fa0>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107e35fa0>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107e35fa0>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107e35fa0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104950070>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104950070>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104950070>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104950070>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1ed070>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1ed070>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1ed070>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1ed070>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a0c8070>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a0c8070>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a0c8070>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a0c8070>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10659d070>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10659d070>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10659d070>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10659d070>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d42e8e0>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d42e8e0>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d42e8e0>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d42e8e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110060760>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110060760>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110060760>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110060760>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ad9c760>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ad9c760>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ad9c760>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ad9c760>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10157c760>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10157c760>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10157c760>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10157c760>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode2'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode2'>.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101d7f760>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101d7f760>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101d7f760>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101d7f760>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10115a790>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10115a790>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10115a790>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10115a790>>
(Vole.py, attempt_random_action) Vole1 attempting random action attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_random_action) Vole1 attempting random action sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action sleep (arg: 5) 




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1021408e0>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1021408e0>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1021408e0>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1021408e0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10412cf70>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10412cf70>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10412cf70>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10412cf70>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode2'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode2'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: SarahsSimulation
(sim_attempt_move.py, __main__) New Simulation Created: SarahsSimulation
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method SarahsSimulation.mode1_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>, 1)
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: (<bound method SarahsSimulation.mode1_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode1_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode1_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>
(SarahsSimulation.py, SarahsSimulation, mode1_timeout) Running the Mode 1 Simulation
(SarahsSimulation.py, SarahsSimulation, mode1_timeout) Running the Mode 1 Simulation
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: (<bound method SarahsSimulation.mode2_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>, 1)
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: (<bound method SarahsSimulation.mode2_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode2_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode2_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>
(SarahsSimulation.py, SarahsSimulation, mode2_timeout) Running the Mode 2 Simulation
(SarahsSimulation.py, SarahsSimulation, mode2_timeout) Running the Mode 2 Simulation
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 3 is paired with the simulation function: (<bound method SarahsSimulation.mode3_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>, 1)
(Simulation.py, run_sim) Mode 3 is paired with the simulation function: (<bound method SarahsSimulation.mode3_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>, 1)
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode3_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>
(Simulation.py, run_sim) Simulaton is calling the function:<bound method SarahsSimulation.mode3_timeout of <Simulation.Scripts.SarahsSimulation.SarahsSimulation object at 0x1104d0f70>>
(SarahsSimulation.py, SarahsSimulation, mode3_timeout) Running the Mode 3 Simulation
(SarahsSimulation.py, SarahsSimulation, mode3_timeout) Running the Mode 3 Simulation
(Vole.py, simulate_vole_interactable_interaction) simulating vole3 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole3 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10998fd90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10998fd90>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1063e9be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1063e9be0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 ending, if simulation function did not already finish, forcing an exit now.
(Simulation.py, run_sim) Mode 1 ending, if simulation function did not already finish, forcing an exit now.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber3!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with rfid1 because it is on an edge connection different chambers.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) lever1, attribute result: 6
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 2.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Vole1 is already in chamber3!
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10136e760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101361df0>>
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10214fdf0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10214fdf0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10215d760>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10215d760>) 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10214fdf0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10214fdf0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1057e65e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1057e65e0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1057e65e0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1057e65e0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e0b3bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e0b3bb0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, attempt_move) lever1, attribute result: 6
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e0b3bb0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e0b3bb0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1101eddc0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1101eddc0>>
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1101f78e0>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1101f78e0>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1101f78e0>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1101f78e0>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1101f78e0>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1101f78e0>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1101f78e0>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1101f78e0>) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting random action: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1101eddc0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1101eddc0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d6b5700>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d6b5700>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d6b5700>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d6b5700>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107eb85e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107eb85e0>>
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--[]--> 3 
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107eb85e0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107eb85e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
simulation.json did not contain the interactable rfid3. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable rfid3. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable rfid4. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable rfid4. sim defaults to False, so this interactable will not be simulated as the simulation runs.
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102e145e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102e145e0>>
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102e145e0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102e145e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10485fe50>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10485fe50>>
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) rfid3, threshold attribute: check_threshold_with_fn, threshold value: False
(Vole.py, attempt_move) rfid3, threshold attribute: check_threshold_with_fn, threshold value: False
(Vole.py, attempt_move) rfid3, attribute result: False
(Vole.py, attempt_move) rfid3, attribute result: False




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103265e50>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103265e50>>
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10326e7f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10326e7f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10326e7f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10326e7f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10326e7f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10326e7f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10326e7f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10326e7f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103265e50>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103265e50>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108097dc0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108097dc0>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104e9ad90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104e9ad90>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10916ce20>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10916ce20>>
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1091927c0>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1091927c0>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10916ce20>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10916ce20>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10890fdc0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10890fdc0>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1089b0760>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1089b0760>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1089b0760>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1089b0760>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10890fdc0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10890fdc0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a310dc0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a310dc0>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10a3b2760>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10a3b2760>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a310dc0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a310dc0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1079bde50>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1079bde50>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1079c67f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1079c67f0>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1079bde50>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1079bde50>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108906d90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108906d90>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1089a7730>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1089a7730>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108906d90>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108906d90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106644d90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106644d90>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1066e6730>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1066e6730>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106644d90>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106644d90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dd88d90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dd88d90>>
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10de2a400>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10de2a400>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10de2a400>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10de2a400>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dd88d90>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dd88d90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105999be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105999be0>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
run_active_mode_sim
run_active_mode_sim
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
(Simulation.py, run_sim) Mode 1 ending, forcing simulation to exit now.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105999be0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105999be0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1044b1be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1044b1be0>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1044bc400>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x1044bc400>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1044b1be0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1044b1be0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1018b4be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1018b4be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1012e9250>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1012e9250>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10cfb0250>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10cfb0250>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c65e250>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c65e250>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108c80250>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108c80250>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100a4b250>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100a4b250>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d538be0>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108cd5bb0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10753ea00>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10753ea00>>
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c826a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c826a30>>
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10c78d580>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x10c78d580>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c826a30>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c826a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107571a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107571a30>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107571a30>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107571a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1030a7a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1030a7a30>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1030a7a30>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1030a7a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104d26a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104d26a30>>
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x104d1f580>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x104d1f580>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x104d1f580>) 
(Vole.py, attempt_random_action) Vole1 attempting: simulate_vole_interactable_interaction (arg: <Control.Classes.InteractableABC.lever object at 0x104d1f580>) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 2) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104d26a30>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104d26a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104f51a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104f51a30>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104f51a30>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104f51a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b587a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b587a30>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b587a30>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b587a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Simulation.py, run_sim) Mode 2 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 2 ended, simulation is completing its final iteration and then exiting.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1072c3ac0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1072c3ac0>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f69da30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f69da30>>
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Vole.py, attempt_random_action) Vole1 attempting: sleep (arg: 5) 
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108fc7a00>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108fc7a00>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole2 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole2 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106da8a90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106da8a90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106af8a90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106af8a90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d949a60>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d949a60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10278da60>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10278da60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104275af0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104275af0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101beaa60>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101beaa60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101beaa60>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101beaa60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1016d08e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1016d08e0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10510d910>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10510d910>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1039c1a60>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1039c1a60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104801af0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104801af0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109783af0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109783af0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole2 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 3) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 3.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid3
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 3
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_random_action) Vole1 attempting: attempt_move (arg: 1) 
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 3. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, attempt_move) traversing the edge: Edge 13, connects: 1 <--['rfid3', 'rfid4']--> 3 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a7c8a90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a7c8a90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108d61a90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108d61a90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108d61a90>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108d61a90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1020e1ac0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1020e1ac0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106a37a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106a37a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1073c1a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1073c1a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102628a30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102628a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102628a30>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102628a30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1090bb910>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1090bb910>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
simulation.json did not contain the interactable lever2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable lever2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a82ecd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a82ecd0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with door1
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, threshold attribute: state, threshold value: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) door1, attribute result: True
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b508cd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b508cd0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106ae7cd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106ae7cd0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110248cd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110248cd0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c3a1cd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c3a1cd0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110634cd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110634cd0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fb9f880>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fb9f880>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1028a4cd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1028a4cd0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever2 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105413d60>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105413d60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105413d60>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105413d60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 2.
(Vole.py, attempt_move) Vole1 is already in chamber2!
(Vole.py, attempt_move) Vole1 is already in chamber2!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1065a0d30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1065a0d30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10868adc0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10868adc0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10868adc0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10868adc0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 5
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 5
(Vole.py, attempt_move) lever1, attribute result: 5
(Vole.py, attempt_move) lever1, attribute result: 5
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 3
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 3) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.
(Simulation.py, run_sim) No simulation function for <class 'Control.Scripts.ModeScripts_RandomVoles.mode3'>.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101b2bdc0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101b2bdc0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101b2bdc0>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101b2bdc0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107a9ed60>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107a9ed60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103d83cd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103d83cd0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1091eddc0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1091eddc0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106724d30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106724d30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a69ed30>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a69ed30>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1048bcd60>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1048bcd60>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 1.
(Vole.py, attempt_move) Vole1 is already in chamber1!
(Vole.py, attempt_move) Vole1 is already in chamber1!




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106b4bd90>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106b4bd90>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['rfid1', 'lever1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10986ae20>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10986ae20>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 2. Destination: 1.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid2
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Simulation.py, run_sim) Mode 1 ended, simulation is completing its final iteration and then exiting.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, simulate_vole_interactable_interaction) Cannot simulate vole1 interaction with lever1 because it is in a different chamber.
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10986ae20>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10986ae20>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
simulation.json did not contain the interactable door2. sim defaults to False, so this interactable will not be simulated as the simulation runs.
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dae51f0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dae51f0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2 




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105ea91f0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105ea91f0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2 




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106e9f160>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106e9f160>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2 




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10875a160>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10875a160>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber 1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2 
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2 
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106cd01c0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106cd01c0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b8fe1c0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b8fe1c0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1097131c0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1097131c0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106a5f220>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106a5f220>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10cc2b220>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10cc2b220>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c2a4280>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c2a4280>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1d6250>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1d6250>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b1ee220>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b1ee220>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dd21250>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dd21250>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105a11250>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105a11250>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dcd0220>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10dcd0220>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a16a220>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a16a220>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1032b72b0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1032b72b0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1104ba2b0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1104ba2b0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1098b72b0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1098b72b0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a3b92b0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a3b92b0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101d552b0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101d552b0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105f612b0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105f612b0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109a662e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109a662e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ad1a340>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ad1a340>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ad1a340>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ad1a340>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1065cc280>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1065cc280>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d2ac2e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d2ac2e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106f212e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106f212e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1011ce2e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1011ce2e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 2
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 1.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10195d310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10195d310>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105a962e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105a962e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1099f6310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1099f6310>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1010d9310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1010d9310>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1108f7400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1108f7400>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f5dd400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f5dd400>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c437370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c437370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1040cb370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1040cb370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10cae8370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10cae8370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100c89370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100c89370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c807370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10c807370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103aab370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103aab370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e583370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e583370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110234370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110234370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e8c7370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e8c7370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a268370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a268370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d4ed370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d4ed370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ca78280>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ca78280>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10be07310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10be07310>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100c09310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100c09310>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108fb6ca0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108fb6ca0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1062762e0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1062762e0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10133c370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10133c370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10541d400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10541d400>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107e77d00>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107e77d00>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10212b400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10212b400>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10123b400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10123b400>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105da7430>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105da7430>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10bc2c430>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10bc2c430>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f6b3430>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f6b3430>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ac0f370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ac0f370>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103554430>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103554430>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10507c430>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10507c430>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d7d3400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d7d3400>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107498400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107498400>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101f64430>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101f64430>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1db430>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1db430>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10982c430>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10982c430>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'rfid1', 'door1', 'lever2', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1010c23d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1010c23d0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104349490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x104349490>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f6a1490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f6a1490>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10197a3d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10197a3d0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1067f53d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1067f53d0>>
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109927490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109927490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in chamber1. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1041993d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1041993d0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101a6ffd0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101a6ffd0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100cff490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100cff490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1073c7490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1073c7490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b153490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b153490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 200.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 200.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10646b490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10646b490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1
(Vole.py, attempt_move) Simulated Vole 1 successfully moved into chamber 1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106626490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106626490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100a69490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x100a69490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b714490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b714490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole.py, attempt_move) attempting a move that is not physically possible according to Map layout. Skipping Move Request
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever2
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, attempt_move) lever2, attribute result: 4
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with lever1
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, threshold attribute: pressed, threshold value: 4
(Vole.py, attempt_move) lever1, attribute result: 4
(Vole.py, attempt_move) lever1, attribute result: 4




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fadf490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fadf490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b6a3490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b6a3490>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10765af70>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10765af70>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f32f370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f32f370>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107419340>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107419340>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106c6d370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106c6d370>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1042aa340>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1042aa340>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1089c9340>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1089c9340>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d4ee3a0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10d4ee3a0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fb723d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fb723d0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1093393a0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1093393a0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10769d340>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10769d340>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109364340>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109364340>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fa6b3a0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fa6b3a0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10341c310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10341c310>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b326310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b326310>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f3ba550>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f3ba550>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1088c73d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1088c73d0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1b73d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a1b73d0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1084ea310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1084ea310>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f4483d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f4483d0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10160a3d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10160a3d0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x11083c3d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x11083c3d0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fa883d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fa883d0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1017973a0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1017973a0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107e58310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x107e58310>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fd81310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fd81310>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fd81310>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10fd81310>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102a53730>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x102a53730>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105fb6310>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105fb6310>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 1.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 2
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 2) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105fb6310>>
(Simulation.py, run_sim) Mode 2 is paired with the simulation function: <bound method RandomVoles.mode2_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105fb6310>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ea8a3d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ea8a3d0>>
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) Entering the attempt move function. Vole 1 is currently in edge12. Destination: 2.
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole1, attempt_move) traversing the edge: Edge 12, connects: 1 <--['lever1', 'lever2', 'rfid1', 'door1', 'door2', 'rfid2']--> 2
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1
(Vole.py, simulate_vole_interactable_interaction) simulating vole1 interaction with rfid1




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108eb24f0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x108eb24f0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109dea370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x109dea370>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1076f83d0>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1076f83d0>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ed53370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10ed53370>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101f76370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x101f76370>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1018ed370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1018ed370>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1095b2370>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1095b2370>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x11003b340>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x11003b340>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10124d340>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10124d340>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10288a490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10288a490>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106f76400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x106f76400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1037f8460>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1037f8460>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f65d490>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f65d490>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1026b3400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1026b3400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e02d400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10e02d400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105401400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105401400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105a8c400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x105a8c400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10540f400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10540f400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1044f3400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1044f3400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110114400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x110114400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f306400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f306400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a343400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a343400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b86a400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10b86a400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10649b400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10649b400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103df3400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x103df3400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a15d400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10a15d400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10210f400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10210f400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10db8d400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10db8d400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f7eb400>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x10f7eb400>>




-----------------------------New Simulation Running------------------------------------




-----------------------------New Simulation Running------------------------------------
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(Simulation.py, configure_simulation) reading/parsing the file /Users/sarahlitz/Projects/Donaldson Lab/Vole Simulator Version 1/Box_Vole_Simulation/Simulation/Configurations/simulation.json
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(sim_attempt_move.py, __main__) New Simulation Created: RandomVoles
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
(Simulation.py, run_sim) Daemon Thread for getting the active mode, and running the specified simulation while active mode is in its timeout period.
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
NEW MODE: (Simulation.py, run_sim) Simulation Updating for Control Entering a New Mode: Mode 1
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) The current mode (Mode 1) entered in timeout. Checking for if a simulation should be run. 
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1037c3460>>
(Simulation.py, run_sim) Mode 1 is paired with the simulation function: <bound method RandomVoles.mode1_timeout of <Simulation.Scripts.RandomVoles.RandomVoles object at 0x1037c3460>>
